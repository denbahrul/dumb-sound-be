// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String
  profilePhoto String

  role RoleEnum @default(USER)

  createdAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt

  @@map("user")
}

enum RoleEnum {
  ADMIN
  USER
}

// model PremiumUser {

// }

model Music {
  id Int @id @default(autoincrement())
  thumbnail String
  musicUrl String
  title String
  year Int
  artist Artist @relation(fields: [artistId], references: [id], onDelete: Cascade) 
  artistId Int

  createdAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt

  @@map("music")
}

model Artist {
  id Int @id @default(autoincrement())
  name String
  old Int?
  type ArtisTypeEnum
  careerStart String?

  music Music[]
  createdAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt

  @@map("artist")
}

enum ArtisTypeEnum {
  Solo
  Group
  Duo
} 